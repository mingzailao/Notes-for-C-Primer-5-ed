#+TITLE:     C++ Primer Notes
#+AUTHOR:    mingzailao
#+EMAIL:     mingzailao@126.com
#+DATE:      2016-9-11
* Begin
** Writing a Simple C++ Program
*** Example 1.1
#+BEGIN_SRC c++
#include<iostream>
using std::cout;
using std::endl;
int main()
{
    cout<<"Hello world"<<endl;
    return 0;
}
#+END_SRC
*** Compiling and Executing Our Program
**** Comliling
#+BEGIN_SRC sh
  #!/bin/bash
  cd Code
  g++ hello.cpp -o Hello
#+END_SRC
In the next, I just use Automake to compile.

**** Executing 
./Hello
*** Exercise
**** Exercise 1.2: Change the program to return -1. A return value of -1 is often treated as an indicator that the program failed. Recompile and rerun your program to see how your system treats a failure indicator from main.
***** Answer
#+BEGIN_SRC c++
#include<iostream>

int main()
{
    return -1;
}
#+END_SRC
** A First Look at Input/Output
*** Standard Input and Output Objects
The library defines four IO objects:
1. istream:cin
2. ostream:cout
3. cerr
4. clog
*** A Program That Uses the IO Library
#+BEGIN_SRC c++
#include<iostream>
int main()
{
    std::cout<<"Enter two numbers : "<<std::endl;
    int v1=0,v2=0;
    std::cin>>v1>>v2;
    std::cout<<"The sum of "<<v1<<"and "<<v2
        <<" is "<<v1+v2<<std::endl;
    return 0;
}
#+END_SRC 
*** Writing to a Stream
#+BEGIN_SRC c++
std::cout<<"Enter two number"<<std::endl;
#+END_SRC
The $<<$ operator takes two operands:
The left-hand operand must be an ostream object(std::cout); 
the right-hand operand is a value to print.
The operator writes the given value on the given ostream
**** Notes for std::endl
Writing endl has the effect of ending the current line and flushing the buffer.
*** Using Names from the Standard Library
The prefix std:: indicates that the names cout and endl are defined inside the
namespace named std.
*** Reading from a Stream
#+BEGIN_SRC c++
std::cin >> v1 >> v2;
#+END_SRC
The input operator (the $>>$ operator) behaves analogously to the output operator.
It takes an istream as its left-hand operand and an object as its
right-hand operand.
It reads data from the given istream and stores what was read in the given object. 
The input operator returns its left-hand operand as its result.
**** Notes
All the operators just like a function which can return its left-hand operand or its 
right-hand operand.
*** Completing the Program
#+BEGIN_SRC c++
std::cout << "The sum of " << v1 << " and " << v2 
<< " is " << v1 + v2 << std::endl;
#+END_SRC
It prints each of its operands on the standard output.
What is interesting in this example is that the operands are not all the same kinds of values. 
Some operands are string literals, such as "The sum of ". 
Others are int values, such as v1, v2, 
and the result of evaluating the arithmetic expression v1 + v2. 
The library defines versions of the input and output 
operators that handle operands of each of these differing types.
*** EXercise
**** Exercise 1.3: Write a program to print Hello, World on the standard output.
***** Answer
#+BEGIN_SRC c++
#include<iostream>
int main()
{
    std::cout<<"Hello world"<<std::endl;
    return 0;
}

#+END_SRC
**** Exercise 1.4: Our program used the addition operator, +, to add two numbers. Write a program that uses the multiplication operator, *, to print the product instead.
***** Answer
#+BEGIN_SRC c++
#include<iostream>
int main()
{
    std::cout<<"Enter two numbers : "<<std::endl;
    int v1=0,v2=0;
    std::cin>>v1>>v2;
    std::cout<<"The product of "<<v1<<"and "<<v2
        <<" is "<<v1*v2<<std::endl;
    return 0;
}

#+END_SRC
**** Exercise 1.5: We wrote the output in one large statement. Rewrite the program to use a separate statement to print each operand.
***** Answer
#+BEGIN_SRC c++
#include<iostream>
int main()
{
    std::cout<<"Enter two numbers : "<<std::endl;
    int v1=0,v2=0;
    std::cin>>v1>>v2;
    std::cout<<"The sum of "<<std::endl;
    std::cout<<v1<<std::endl;
    std::cout<<"and "<<std::endl;
    std::cout<<v2<<std::endl;
    std::cout<<"is "<<std::endl;
    std::cout<<v1+v2<<std::endl;
    return 0;
}

#+END_SRC
** A Word about Comments
*** Kinds of Comments in C++
1. //
2. /*    */
** Flow of Control
*** The while Statement
**** Example
#+BEGIN_SRC c++
#include <iostream>
int main()
{
    int sum=0,val =1;
    while(val<=10){
        sum+=val;
        ++val;
    }
    std::cout<<"Sum of 1 to 10 is : "<<sum<<std::endl;
    return 0;
}
#+END_SRC
**** Notes
#+BEGIN_SRC c++
val+=1
#+END_SRC
val+=1 \Leftrightarrow  val=val+1
++val  \Leftrightarrow  val=val+1 and the value of ++val is val(after)
val++  \Leftrightarrow  val=val+1 and the value of val++ is val(before)
*** Exercise
**** Exercise 1.9: Write a program that uses a while to sum the numbers from 50 to 100.
#+BEGIN_SRC c++

#+END_SRC
